services:
  redis:
    image: redis:8.2
    container_name: redis
    restart: always
    env_file:
      - .env
    ports:
      - "${REDIS_PORT}:6379"
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}", "--appendonly", "yes", "--notify-keyspace-events", "Ex"]
    volumes:
      - redis_data:/data

  postgres-db:
    image: postgres:18-alpine
    container_name: reserva_espacios_db
    environment:
      POSTGRES_DB: reserva_espacios_um
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend-app:
    container_name: reserva-espacios
    restart: unless-stopped
    build:
      dockerfile: ./Dockerfile.dev
    env_file:
      - ./.env
    ports:
      - "5000:5000"
    volumes:
      - ./src:/app
    depends_on:
      postgres-db:
        condition: service_healthy
      redis: 
        condition: service_started

volumes:
  postgres_data:
  redis_data:
